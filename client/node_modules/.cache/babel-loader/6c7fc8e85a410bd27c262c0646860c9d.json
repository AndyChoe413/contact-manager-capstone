{"ast":null,"code":"var _jsxFileName = \"/Users/andychoe/Desktop/coding-projects/contact-manager-capstone/client/src/context/auth/AuthState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport axios from 'axios';\nimport AuthContext from './authContext';\nimport authReducer from './authReducer';\nimport setAuthToken from '../../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, CLEAR_ERRORS } from '../actionTypes'; // eslint-disable-next-line \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    isAuthenticated: null,\n    loading: true,\n    error: null\n  };\n  const [state, dispatch] = useReducer(authReducer, initialState); //load user\n\n  const loadUser = async () => {\n    // load token into global header\n    if (localStorage.token) {\n      setAuthToken(localStorage.token);\n    }\n\n    try {\n      const res = await axios.get('/api/auth');\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    } catch (err) {\n      dispatch({\n        type: AUTH_ERROR\n      });\n    }\n  }; //register user\n\n\n  const register = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/users', formData, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: REGISTER_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //login user\n\n\n  const login = async formData => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    try {\n      const res = await axios.post('/api/auth', formData, config);\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n      loadUser();\n    } catch (err) {\n      dispatch({\n        type: LOGIN_FAIL,\n        payload: err.response.data.msg\n      });\n    }\n  }; //logout user\n\n\n  const logout = () => dispatch({\n    type: LOGOUT\n  }); //clear errors\n\n\n  const clearErrors = () => dispatch({\n    type: CLEAR_ERRORS\n  });\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      isAuthenticated: state.isAuthenticated,\n      loading: state.loading,\n      user: state.user,\n      error: state.error,\n      register,\n      loadUser,\n      login,\n      logout,\n      clearErrors\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/andychoe/Desktop/coding-projects/contact-manager-capstone/client/src/context/auth/AuthState.js"],"names":["React","useReducer","axios","AuthContext","authReducer","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","CLEAR_ERRORS","AuthState","props","initialState","token","localStorage","getItem","isAuthenticated","loading","error","state","dispatch","loadUser","res","get","type","payload","data","err","register","formData","config","headers","post","response","msg","login","logout","clearErrors","user","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react'\nimport axios from 'axios'\nimport AuthContext from './authContext'\nimport authReducer from './authReducer'\nimport setAuthToken from '../../utils/setAuthToken'\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT,\n    CLEAR_ERRORS\n} from '../actionTypes'\n\n\n// eslint-disable-next-line \nconst AuthState = props => {\n   \n    const initialState = {\n        token: localStorage.getItem('token'),\n        isAuthenticated: null,\n        loading: true,\n        error: null,\n    };\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    //load user\n    const loadUser = async () => {\n        // load token into global header\n        if (localStorage.token) {\n            setAuthToken(localStorage.token)\n        }\n\n        try {\n            const res = await axios.get('/api/auth')\n\n            dispatch({type: USER_LOADED, payload: res.data})\n        } catch (err) {\n            dispatch({type: AUTH_ERROR})\n        }\n    }\n\n    //register user\n    const register = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/users', formData, config)\n\n            dispatch({\n                type: REGISTER_SUCCESS,\n                payload: res.data\n            })\n\n            loadUser()\n\n        } catch (err) {\n            dispatch({\n                type: REGISTER_FAIL,\n                payload: err.response.data.msg\n            })\n        }\n    }\n\n    //login user\n    const login = async formData => {\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        try {\n            const res = await axios.post('/api/auth', formData, config)\n\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            })\n\n            loadUser()\n\n        } catch (err) {\n            dispatch({\n                type: LOGIN_FAIL,\n                payload: err.response.data.msg\n            })\n        }\n    }\n\n    //logout user\n    const logout = () => dispatch({type: LOGOUT})\n\n    //clear errors\n    const clearErrors = () => dispatch({type: CLEAR_ERRORS})\n  \n    return (\n        <AuthContext.Provider\n            value={{\n                token: state.token,\n                isAuthenticated: state.isAuthenticated,\n                loading: state.loading,\n                user: state.user,\n                error: state.error,\n                register,\n                loadUser,\n                login,\n                logout,\n                clearErrors          \n        }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\n\nexport default AuthState"]},"metadata":{},"sourceType":"module"}